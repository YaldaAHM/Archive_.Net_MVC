@using System.Security.Claims
@using YA.Archive.Infrastructure.Infrastructure.Permission
@using YA.Archive.MVC2.Models.Folder
<style>
    body {
        font-size: 10px;
    }
</style>
<script src="~/Scripts/kendo/2016.3.914/kendo.all.min.js"></script>
@Html.Partial("_SiteMap", ViewData["ProjectSiteMap"])

@(Html.Kendo().Grid<Project>().Name("Projects")
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(10)
         .Events(events =>
         {
             events.Error("error_handler");
             events.RequestEnd("onRequestEnd");

         })
        .Model(model => model.Id(m => m.Id))
           
            .Read(read => read.Action("Read", "FileProject").Data("projectsReadData"))

    )

    .Columns(columns =>
    {
        columns.Template(t => { }).Title("Row No").ClientTemplate("#= renderNumber(data) #").Hidden(true);
        columns.Template(t => { }).Title("Number").ClientTemplate("#= renderRecordNumber(data) #");
        columns.Bound(c => c.Id).Hidden();
        columns.Bound(c => c.Code).Title("Id");
        columns.Bound(c => c.Name);
 
        columns.Bound(c => c.Description);
        columns.Bound(p => p.KeyWord)
                     .EditorTemplateName("TagInputEditor");
        if (Request.IsAuthenticated && !User.IsInRole(RolesT.MainCenter))
        {
            columns.ForeignKey(p => p.ClientCenterId, (System.Collections.IEnumerable) ViewData["ClientCenter"], "Id", "Name").Title("Client Center Name").Hidden();
        }
        else
        {
            columns.ForeignKey(p => p.ClientCenterId, (System.Collections.IEnumerable)ViewData["ClientCenter"], "Id", "Name").Title("Client Center Name");

        }
        columns.Bound(p => p.TypeofFolders).ClientTemplate("#= renderMultiSelectText(data.TypeofFolders) #")
            .EditorTemplateName("TypeOfFolderEditor").Title("Document Type");
        columns.Bound(p => p.CreateDate).Title("Creation Date");
        columns.Bound(p => p.LastUpdateDate).Title("Last Edit Date");
       
        columns.Command(command => command.Custom("Attachments").Click("showFiles")).Title("Attachments");

    })


.ToolBar(toolbar =>
{
    toolbar.Template(@<text>
        <div class="toolbar" style="float: left">
          

            <a style='margin-left: 10px; background-color: lightsteelblue;' class='k-button k-button-icontext' onclick='searchCommand()' href='#'>
                &nbsp; &nbsp; Search &nbsp;&nbsp;
            </a>
            <div id="divt"> @Html.Partial("_SearchProject") </div>

        </div>
    </text>);
})
.Events(e =>
{
    e.Edit("onEdit");
    e.DataBound("onDataBound");
})
     .Pageable(pager => pager
              .Messages(messages => messages.Display("{0} to {1} . Total {2}")).Messages(messages => messages.Empty("No information has been registered")))

    .Sortable()
    .Editable(editable =>
    {
        editable.Mode(GridEditMode.PopUp).Window(w => w.Width(900).Title("")).TemplateName("Project");
        editable.DisplayDeleteConfirmation(false);
    })
)



<script>



    function searchCommand() {
        $("#divt").toggle("slow");
    }
    function reportFile() {
        //$("#del1").click(function (e) {
        //e.preventDefault();
        $.ajax({
            url: "/ReportProject/Index",
            //data: $("#fileupload").serialize(),
            data: { sName: $("#SName").val(), },//"{%=file.name%}"},
            type: "Post",
            dataType: "Json"

        });
        //});
    }
    $(document).ready(function () {

         $("#divt").toggle("9999999");
       
    });
    var rowNumber = 0;

    function renderNumber(data) {
        return ++rowNumber;
    }

    function renderRecordNumber(data) {
        var page = parseInt($("#Projects").data("kendoGrid").dataSource.page()) - 1;
        var pagesize = $("#Projects").data("kendoGrid").dataSource.pageSize();
        return parseInt(rowNumber + (parseInt(page) * parseInt(pagesize)));
    }

    function onDataBound(e) {
        rowNumber = 0;
        var grid = this;

        grid.tbody.find("tr[role='row']").each(function () {
            var model = grid.dataItem(this);
            //if (!model.HasClaimEdit || model.IsUpdateLock) {
            if ( model.IsUpdateLock) {
                $(this).find(".k-grid-edit").addClass("k-state-disabled");
                $(this).find(".k-grid-edit").remove();
            }
            //if (!model.HasClaimDelete || model.IsDeleteLock) {
            if ( model.IsDeleteLock) {
                $(this).find(".k-grid-cDelete").addClass("k-state-disabled");
                $(this).find(".k-grid-cDelete").remove();
            }
        });
        if (ss == true) {
            if (!e.sender.dataSource.view().length) {
                   Lobibox.notify('info', {
                    title: 'Search',
                    msg: "There are no items to display",
                    position: 'bottom left',
                });
            } else {
                Lobibox.notify('success', {
                    title: 'Search',
                    msg: "Search was done successfully.",
                    position: 'bottom left',
                });
            }
        }
        ss = false;
    }
    function onEdit(e) {
        if (e.model.isNew()){
            $('table tr:gt(' + 1 + ')').each(function () {
                $(this).remove();
            });
            $("#grid tbody [data-role=dropdownlist]").each(function () {
                var ddl = $(this).data("kendoDropDownList");
                if (ddl) {
                    ddl.options.optionLabel = "Select";
                    ddl.refresh();
                    ddl.value("");
                }
            });
        };
        $("#SName").val($("#Name").val());
        $("#SStartDate").val("");
            $("#SEndDate").val("");
            $("#SClientCenterId").val("");
            $("#STypeofFolders").val("");
            $("#SKeyWords").val("");
            $("#SCode").val("");
        e.container.find(".k-grid-update").on("click", function (e) {
            $("#SName").val($("#Name").val());
            $("#SStartDate").val("");
            $("#SEndDate").val("");
            $("#SClientCenterId").val("");
            $("#STypeofFolders").val("");
            $("#SKeyWords").val("");
            $("#SCode").val("");
        });
        
    }
    function onCancel(e) {
       
        $("#Projects").data("kendoGrid").dataSource.read();
       
    };
    function renderMultiSelectText(selectListArray) {
        if (selectListArray != undefined && selectListArray[0] != undefined) {

            var displayText;
            $.each(selectListArray, function(index) {
                if (displayText == undefined)
                    displayText = selectListArray[index].Name + " ,";
                else
                    displayText = displayText + selectListArray[index].Name + " ,";
            });
            return displayText.slice(0, -2);
        } else
            return "";
    }
</script>
<script type="text/javascript">
    function onRequestEnd(e) {
        if (e.type == "create" && !e.response.Errors) {
            if (e.response == null || e.response.Errors == null) {
                setTimeout(function myfunction() {
                    Lobibox.alert('success', {
                        msg: "Ok. done successfully",
                        title: "successful",
                        buttons: {
                            ok: {
                                text: "Ok",
                                'class': 'btn btn-success bthwidth',
                            }
                        }
                    });
                    $("#Projects").data("kendoGrid").dataSource.read();
                    $("#SName").val("");

                }, 1000);
               }
        }
            else if (e.type == "destroy" && !e.response.Errors) {
                if (e.response == null || e.response.Errors == null) {
            setTimeout(function myfunction() {
                Lobibox.alert('success', {
                    msg: "Delete was done successfully.",
                    title: "successful",
                    buttons: {
                        ok: {
                            text: "Ok",
                            'class': 'btn btn-success bthwidth',
                        }
                    }
                });
               
            }, 1000);
                } $("#SName").val("");
            }
        else if (e.type == "update" && !e.response.Errors) {
            if (e.response == null || e.response.Errors == null) {
              setTimeout(function myfunction() {
                  Lobibox.alert('success', {
                      msg: "Edit was done successfully.",
                      title: "successful",
                      buttons: {
                          ok: {
                              text: "Ok",
                              'class': 'btn btn-success bthwidth',
                          }
                      }
                  });
                    $("#Projects").data("kendoGrid").dataSource.read();
                }, 1000);
            } $("#SName").val("");
        }
       
    }

    var t = false;
    var Err = "";
    function error_handler(e) {
        if (e.errors) {
            Err = "Error";
            var message = "Error :\n";
            $.each(e.errors, function(key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });
            
            e.sender.read();
            e.sender._destroyed = [];
            Lobibox.alert('error', {
                msg: message,
                title: "Error!",
                buttons: {
                    ok: {
                        text: "Close",
                        'class': 'btn btn-danger bthwidth',
                    }
                }
            });
            $("#Projects").data("kendoGrid").dataSource.read();
        }
    }
</script>
<script>
    var ss = false;
    var IsClickSearch = false;
    $("#btnSearchT").click(function (e) {
        e.preventDefault();
        $("#divt").toggle("slow");

    });
    $("#btnSearch").click(function (e) {
        e.preventDefault();
        ss = true;
        IsClickSearch = true;
        $("#Projects").data("kendoGrid").dataSource.read();
        IsClickSearch = false;
        $("#divt").toggle("slow");

    });

    function projectsReadData() {
        return {
           
            sIsClickSearch: IsClickSearch,
            sStartDate: $("#SStartDate").val(),
            sEndDate: $("#SEndDate").val(),
            sName: $("#SName").val(),
            sClientCenterId: $("#SClientCenterId").val(),
            sTypeofFolders: $("#STypeofFolders").val(),
            sKeyWords: $("#SKeyWords").val(),
            sCode: $("#SCode").val(),
            //isBack: false,
            //Id:0,
        };
    }
</script>
<script type="text/javascript">

    function showFiles(e) {
        e.preventDefault();
        var d = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = "@Url.Action("Index", "File")?projectId=" + d.Id;
    }
</script>
<script type="text/javascript">

    function showComments(e) {
        e.preventDefault();
        var d = this.dataItem($(e.currentTarget).closest("tr"));

        window.location.href = "@Url.Action("Index", "Comment")?projectId=" + d.Id;
        
    }
</script>