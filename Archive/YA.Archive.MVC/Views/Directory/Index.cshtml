@using System.Security.Claims
@using Kendo.Mvc.UI

@*@{
        Layout = null;
    }*@
<style>

</style>
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Type of File</title>
</head>
<body>
    <div>
        @Html.Partial("_SiteMap", ViewData["DirectorySiteMap"])
        @(Html.Kendo().Grid<YA.Archive.Service.DirectoryMdl.VMs.DirectoryVM>()
          .Name("grid")
          .Columns(columns =>
          {
              columns.Bound(p => p.Id).Sortable(false).Visible(false);

              columns.Bound(p => p.Name).Width(900);

              columns.Command(command =>
              {
                   command.Edit().Text("Edit")
                      .UpdateText("Ok")
                      .CancelText("Cancel"); });
              columns.Command(c => c.Custom("Custom Delete").Text("Delete<span class='k-icon k-delete'></span>").Click("customDelete").

                  HtmlAttributes(new
                  {
                      style = "background:darksalmon",

                  }));


          })
          .ToolBar(toolbar =>
          {
              
              toolbar.Create().Text("Add New Item");

          })
          .Editable(editable =>
          {
              editable.Mode(GridEditMode.PopUp).Window(w => w.Width(400).Title(""));
              editable.DisplayDeleteConfirmation(false);
          })
          .Pageable(pager => pager
              .Messages(messages => messages.Display("{0} to {1} . Total {2}")).Messages(messages => messages.Empty("No information has been registered")))
          .Sortable()
          .Groupable(g => g.Messages(m => m.Empty("Select")))

          .DataSource(dataSource => dataSource
              .Ajax()
              .PageSize(10)
             .Events(events =>
             {
                 events.Error("error_handler");
                 events.RequestEnd("onRequestEnd");

             })

              .Model(model => model.Id(p => p.Id))
              .Create(update => update.Action("Create", "Directory"))
              .Read(read => read.Action("Read", "Directory"))
              .Update(update => update.Action("Edit", "Directory"))
              .Destroy(update => update.Action("Delete", "Directory"))
          )
          .Events(e => e.Edit("onEdit"))

        )
        <script type="text/javascript">

        function onEdit(e) {
            $('[name="Id"]').attr("Hidden", true);
            $('#Name').css("width", "250px;");
            $('#Name').addClass("width-textbox");
        }

        </script>
        <script type="text/javascript">
            function onRequestEnd(e) {

                if (e.type == "create" && !e.response.Errors) {
                    if (e.response == null || e.response.Errors == null) {
                        setTimeout(function myfunction() {
                            
                            Lobibox.alert('success', {
                                msg: "Ok. done successfully",
                                title: "successful",
                                buttons: {
                                    ok: {
                                        text:"Ok",
                                        'class': 'btn btn-success bthwidth',
                                    }}
                            });
                            $("#grid").data("kendoGrid").dataSource.read();
                          
                        }, 1000);


                    }
                }
                else if (e.type == "destroy"&& !e.response.Errors) {
                    if (e.response == null || e.response.Errors == null) {
                    setTimeout(function myfunction() {
                        Lobibox.alert('success', {
                            msg: "Delete was done successfully.",
                            title: "successful",
                            buttons: {
                                ok: {
                                    text: "Ok",
                                    'class': 'btn btn-success bthwidth',
                                }
                            }
                        });
                        $("#grid").data("kendoGrid").dataSource.read();
                    }, 1000);
                }}
                else if (e.type == "update" && !e.response.Errors) {
                    if (e.response == null || e.response.Errors == null) {

                        setTimeout(function myfunction() {

                            Lobibox.alert('success', {
                                msg: "Edit was done successfully.",
                                title: "successful",
                            buttons: {
                                ok: {
                                        text:"Ok",
                                        'class': 'btn btn-success bthwidth',
                                        }}
                        });
                            
                            $("#grid").data("kendoGrid").dataSource.read();
                           
                        }, 100);

                    }
                }
               
            }
            function error_handler(e) {
                if (e.errors) {
                    var message = "Errors:\n";
                    $.each(e.errors, function(key, value) {
                        if ('errors' in value) {
                            $.each(value.errors, function() {
                                message += this + "\n";
                            });
                        }
                    });
                    Lobibox.alert('error', {
                        msg: message,
                        title: "Error!",
                        buttons: {
                            ok: {
                                text: "Close",
                                'class': 'btn btn-danger bthwidth',
                            }
                        }
                    });

                    $("#grid").data("kendoGrid").dataSource.read();
                }
            }
        </script>
        <script type="text/javascript">

        function showDetails(e) {
            e.preventDefault();
            var d = this.dataItem($(e.currentTarget).closest("tr"));
            window.location.href = "@Url.Action("Index", "Directory")/" + d.Id;
        }
        </script>
    </div>
</body>
</html>
